<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
    <link href="style.css" type="text/css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        #suggestions {
          border: 1px solid #ccc;
          position: absolute;
          max-height: 150px;
          overflow-y: scroll;
          width: 250px; /* Adjust the width as needed */
          background-color: white;
          z-index: 1000;
        }

        table td {
            vertical-align: middle;
        }
      
        .suggestion-item {
          padding: 10px;
          cursor: pointer;
        }
      
        .suggestion-item:hover {
          background-color: #d3d3d3;
        }

        .box {
            padding: 10px;
            margin-bottom: 10px;
            width: 100%;
            background-color: #f9f9f9;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
    </style>
    <title>Sales-Invoice</title>
    <script>
        if (window.history.replaceState) {
            window.history.replaceState(null, null, window.location.href);
        }
    </script>
</head>
<body class="main-contents">
    <%- include('partials/nav'); %>
    <main class="main-content">
        <form action="/procurementsales" method="GET">
            <label for="start_date">Start Date:</label>
            <input type="date" id="start_date" name="start_date">
            
            <label for="end_date">End Date:</label>
            <input type="date" id="end_date" name="end_date">
            
            <button type="submit">Send Dates</button>
        </form>
        <div id="salesDataTable"></div>
        <div style="margin-bottom: 2%; border-bottom: black 1px solid;">
            <div style="border-bottom: black 1px solid; padding: 2% 0;">
                <h2>Add buyer</h2>
                <form method="POST" action="/addbuyer" style="display: flex;" enctype="application/x-www-form-urlencoded">
                        <div style="padding: 0 5%;">
                            <label class="form_name5">Name</label>
                            <input style="margin-bottom: 3px;" type="text" name="name" required placeholder="Buyer Name"><br>
                            <label class="form_name5">Phone</label>
                            <input style="margin-bottom: 3px;" type="number" name="phone" placeholder="Phone"><br>
                            <label class="form_name5">Address</label>
                            <input style="margin-bottom: 3px;" type="text" name="adr1" placeholder="Address 1"><br>
                            <label class="form_name5"></label>
                            <input style="margin-bottom: 3px;" type="text" name="adr2" placeholder="Address 2"><br>
                            <label class="form_name5"></label>
                            <input style="margin-bottom: 3px;" type="text" name="adr3" placeholder="Address 3"><br>
                        </div>
                        <div>
                            <label class="form_name5">Postcode</label>
                            <input style="margin-bottom: 3px;" type="text" name="postcode" placeholder="Postcode"><br>
                            <label class="form_name5">City</label>
                            <input style="margin-bottom: 3px;" type="text" name="city" placeholder="City"><br>
                            <label class="form_name5">State</label>
                            <input style="margin-bottom: 3px;" type="text" name="state" placeholder="State"><br>
                            <label class="form_name5">Country</label>
                            <input style="margin-bottom: 3px;" type="text" name="country" placeholder="Country"><br>
                            
                            <div class="button" style="margin-top: 5%;">
                                <button class="form_button" type="submit">Submit</button>
                                <button class="form_button" type="reset">Clear</button>
                            </div>
                        </div>
                </form>
            </div>
            <div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Buyer ID</th>
                            <th>Name</th>
                            <th>Phone</th>
                            <th>Address</th>
                            <th>Postcode</th>
                            <th>City</th>
                            <th>State</th>
                            <th>Country</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% buyers.forEach(function(buyer) { %>
                            <tr>
                                <td><%= buyer.id %></td>
                                <td><%= buyer.name %></td>
                                <td><%= buyer.phone %></td>
                                <td><%= buyer.adr1 %>, <%= buyer.adr2 %>, <%= buyer.adr3 %></td>
                                <td><%= buyer.postcode %></td>
                                <td><%= buyer.city %></td>
                                <td><%= buyer.state %></td>
                                <td><%= buyer.country %></td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>

        <div>
            <h1>Sales - Invoice</h1>
            <div style="width: 90%;">
                <div>
                    <input type="text" id="buyInvoiceInput" placeholder="Enter BuyInvoice numbers, comma-separated">
                    <button onclick="fetchItems()">Fetch Items</button>
                    <button onclick="createBox()">Create New Box</button>
                </div>
                <form action="/procurementsales" enctype="multipart/form-data" method="POST" id="procurementsales">
                    <button type="submit" class="btn btn-success">Submit</button>
                    <div style="display: flex;justify-content: space-between;width: 80%;margin: 1% 0;">
                        <div>
                            <label for="buyerid">Buyer ID : </label>
                            <input type="number" style="width: 200px;" name="buyerid" placeholder="INPUT BUYER ID" required>
                        </div>
                        <div>
                            <label for="shippingfee">Shipping Fee : </label>
                            <input type="text" name="shippingfee" placeholder=" SHIPPING FEE" required>
                        </div>
                        <div>
                            <label for="runnerfee">Runner Fee : </label>
                            <input type="text" name="runnerfee" placeholder=" RUNNER FEE" required>
                        </div>
                        <div>
                            <label for="remarks">Remarks : </label>
                            <input type="text" name="remarks" placeholder=" REMARKS">
                        </div>
                        <div>
                            <label for="salesdate">Sales Date : </label>
                            <input type="date" name="salesdate" required>
                        </div>
                    </div>
                    <div id="defaultBoxContainer" class="box">Default items</div>
                    <div id="boxesContainer"></div>
                </form>
            </div>
            <table class="table table-striped" style="width: 90%;">
                <thead>
                  <tr>
                    <th>Date</th>
                    <th>Invoice</th>
                    <th>Runnerfee</th>
                    <th>Shippingfee</th>
                    <th>SKU</th>
                    <th>Product Name</th>
                    <th>Size</th>
                    <th>Sell Price</th>
                    <th>BoxName</th>
                  </tr>
                </thead>
                <tbody>
                  <% salesData.forEach(item => { %>
                    <tr>
                        <td><%= item.formattedDate %></td>
                        <td><%= item.salesinvoice %></td>
                        <td><%= item.runnerfee %></td>
                        <td><%= item.shippingfee %></td>
                        <td><%= item.sku %></td>
                        <td><%= item.productname %></td>
                        <td><%= item.size %></td>
                        <td><%= item.sellprice %></td>
                        <td><%= item.tracknum %></td>
                    </tr>
                  <% }) %>
                </tbody>
            </table>

            <script>
                let boxCounter = 0; // Start counting from the default box
            
                function createBox() {
                    boxCounter++;
                    const boxDiv = $(`
                        <div class="box" id="box${boxCounter}">
                            <h3>Box ${boxCounter}</h3>
                            <input type="text" class="form-control box-name-input" placeholder="Enter custom box name" name="boxNames[box${boxCounter}]">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Product Name</th> <!-- Updated from Item to Product Name -->
                                        <th>SKU</th>
                                        <th>Size</th>
                                        <th>Buy Invoice</th>
                                        <th>Quantity</th>
                                        <th>Cost Price</th> <!-- Added Cost Price column -->
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    `);

                    // Make the new box a drop zone
                    boxDiv.on('dragover', allowDragOver);
                    boxDiv.on('drop', handleDrop);

                    $('#boxesContainer').append(boxDiv);
                }

                function allowDragOver(e) {
                    e.preventDefault(); // Necessary to allow dropping
                }

                function handleDrop(e) {
                    e.preventDefault();
                    const itemId = e.originalEvent.dataTransfer.getData("text/plain");
                    const item = $('#' + itemId); // Use jQuery to get the item by ID

                    const quantity = parseInt(item.find('.quantity').text(), 10);
                    if (quantity > 1) {
                        const quantityToMove = parseInt(prompt('Enter quantity to move:', '1'), 10) || 0;
                        if (quantityToMove > 0 && quantityToMove <= quantity) {
                            // Move a portion of the quantity to a new item row
                            moveItem(item, quantityToMove, $(e.target).closest('.box'));
                        } else {
                            alert('Invalid quantity');
                        }
                    } else {
                        // Move the entire item to the new box
                        moveItem(item, quantity, $(e.target).closest('.box'));
                    }

                    // Reapply the draggable setup to ensure new items are draggable
                    makeItemsDraggable();
                }

                function moveItem(item, quantity, targetBox) {
                    const newItem = item.clone();
                    newItem.find('.quantity').text(quantity);
                    newItem.appendTo(targetBox.find('tbody'));

                    // Ensure original item's quantity is updated or the item is removed if necessary
                    const originalQuantity = parseInt(item.find('.quantity').text(), 10);
                    if (quantity < originalQuantity) {
                        item.find('.quantity').text(originalQuantity - quantity);
                    } else {
                        item.remove();
                    }

                    // Call the function to add hidden inputs for the new item
                    addHiddenInputsForItem(newItem, targetBox.attr('id'));
                }

                function addHiddenInputsForItem(item, boxId) {
                    const form = $('#procurementsales');
                    const boxNameInput = $(`#${boxId} .box-name-input`).val() || `Box ${boxId}`; // Use the custom name or default to Box ID
                    const itemId = item.attr('data-productname');
                    const buyInvoice = item.data('buyinvoice');
                    const sku = item.data('sku');
                    const size = item.data('size');
                    const quantity = item.find('.quantity').text();
                    const costprice = item.data('costprice');

                    // Append a hidden input for the box name if it doesn't already exist
                    if (!$(`input[name='boxNames[${boxId}]']`).length) {
                        form.append(`<input type="hidden" name="boxNames[${boxId}]" value="${boxNameInput}">`);
                    }

                    // Create hidden inputs for each item attribute
                    form.append(`<input type="hidden" name="boxItems[${boxId}][productname][]" value="${itemId}">`);
                    form.append(`<input type="hidden" name="boxItems[${boxId}][buyInvoice][]" value="${buyInvoice}">`);
                    form.append(`<input type="hidden" name="boxItems[${boxId}][sku][]" value="${sku}">`);
                    form.append(`<input type="hidden" name="boxItems[${boxId}][size][]" value="${size}">`);
                    form.append(`<input type="hidden" name="boxItems[${boxId}][quantities][]" value="${quantity}">`);
                    form.append(`<input type="hidden" name="boxItems[${boxId}][costprice][]" value="${costprice}">`);
                }

                function fetchItems() {
                    const buyInvoices = $('#buyInvoiceInput').val();
                    if (!buyInvoices) {
                        alert('Please enter BuyInvoice numbers, comma-separated.');
                        return;
                    }

                    $.ajax({
                        url: `/fetch-items?buyinvoices=${encodeURIComponent(buyInvoices)}`,
                        type: 'GET',
                        success: function(items) {
                            displayItemsInDefaultBox(items);
                        },
                        error: function(xhr, status, error) {
                            console.error("Failed to fetch items: ", error);
                            alert("Failed to fetch items. Please check console for more details.");
                        }
                    });
                }

                function displayItemsInDefaultBox(items) {
                    const defaultBox = $('#defaultBoxContainer');
                    defaultBox.empty(); // Clear existing items

                    const table = $('<table class="table"></table>');
                    const thead = $('<thead><tr><th>Product Name</th><th>SKU</th><th>Size</th><th>Buy Invoice</th><th>Quantity</th><th>Cost Price</th><th>Actions</th></tr></thead>');
                    table.append(thead);

                    const tbody = $('<tbody></tbody>');
                    items.forEach((item, index) => {
                        const row = $(`<tr id="item-${item.sku}-${index}" class="draggable" draggable="true" 
                                        data-productname="${item.productname}" data-buyinvoice="${item.buyinvoice}" 
                                        data-sku="${item.sku}" data-size="${item.size}" data-costprice="${item.costprice}"></tr>`);
                        row.append(`<td>${item.productname}</td>`);
                        row.append(`<td>${item.sku}</td>`);
                        row.append(`<td>${item.size}</td>`);
                        row.append(`<td>${item.buyinvoice}</td>`);
                        row.append(`<td class="quantity">${item.total_quantity}</td>`);
                        row.append(`<td>${item.costprice}</td>`); // Display cost price
                        row.append('<td><button type="button" class="btn btn-danger btn-sm" onclick="deleteRow(this)">Delete</button></td>');
                        tbody.append(row);
                    });

                    table.append(tbody);
                    defaultBox.append(table);

                    makeItemsDraggable(); // Make new items draggable
                }

                function deleteRow(button) {
                    $(button).closest('tr').remove();
                }
            
                function makeItemsDraggable() {
                    // This selects all items marked as draggable in the DOM, including new ones
                    $('.draggable').attr('draggable', true).off('dragstart').on('dragstart', function(e) {
                        e.originalEvent.dataTransfer.setData('text/plain', e.target.getAttribute('id'));
                    });
                }
            </script>
        </div>
    </main>
</body>
</html>

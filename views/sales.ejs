<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="style.css" type="text/css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <title>Sales - Record Your Sales</title>
    <script>
        if (window.history.replaceState) {
            // Prevents the form from being resubmitted on page refresh
            window.history.replaceState(null, null, window.location.href);
        }
    </script>
  </head>
  <body class="main-contents">
    <%- include('partials/nav'); %>
    <main class="main-content">
      <div class="container">
        <h1>Sales - Record Your Sales</h1>
        <form id="purchase-form" method="POST" action="/sales" enctype="multipart/form-data">
          <div class="form-group position-relative" style="display: flex;">
              <div>
                  <label for="buyerName">Buyer Name:</label>
                  <input type="text" class="form-control" id="buyerName" name="buyerName" autocomplete="off" required>
                  <div class="dropdown">
                      <ul class="dropdown-menu" id="buyer-dropdown" style="width: 100%;">
                          <!-- Dynamic supplier list will be inserted here -->
                      </ul>
                  </div>
              </div>
              <div class="input-container" style="display: flex; flex-direction: column;">
                  <label for="date">Date:</label>
                  <input class="form-control" type="date" name="date" id="date" autocomplete="off" required>
              </div>
          </div>
  
          <div style="margin: 15px 0;">
              <label class="form-check-label" for="paid">Paid</label>
              <input class="form-check-input" type="checkbox" value="yes" id="paid" name="paid">
          </div>
  
          <!-- Payment details form -->
          <div id="payment-details" style="display: none; margin: 15px 0; border: 1px solid #ccc; padding: 10px; border-radius: 5px;">
              <h5>Payment Details</h5>
              <div class="form-group">
                  <label for="paidBy">Paid By:</label>
                  <select class="form-control" id="paidBy" name="paidBy">
                      <option value="online banking">Online Banking</option>
                      <option value="cash">Cash</option>
                      <option value="ewallet">E-Wallet</option>
                  </select>
              </div>
              <div class="form-group">
                  <label for="paidDate">Paid Date:</label>
                  <input type="date" class="form-control" id="paidDate" name="paidDate">
              </div>
              <div class="form-group">
                  <label for="paymentFile">Upload Payment Details (PDF/Image):</label>
                  <input type="file" class="form-control" id="paymentFile" name="paymentFile" accept=".pdf,image/*">
              </div>
          </div>
  
          <!-- Product Table -->
          <div class="form-group">
              <label for="productTable">Products:</label>
              <table class="table table-bordered" id="productTable">
                  <thead>
                      <tr>
                          <th>Product</th>
                          <th>Quantity</th>
                          <th>Price</th>
                          <th>AddRow <button type="button" id="addProductRow"><i class="bi bi-plus-circle-fill"></i></button></th>
                      </tr>
                  </thead>
                  <tbody>
                      <tr>
                        <td>
                            <select class="form-control product-select" name="product[]" required>
                              <option value="">Select Product</option>
                            </select>
                          </td>
                          <td><input type="number" class="form-control quantity-input" name="quantity[]" min="1" max="" required></td>                          
                          <td><input type="number" class="form-control price-input" name="price[]" min="0.01" step="0.01" required></td>
                          <td><button type="button" class="btn btn-danger remove-product">Remove</button></td>
                      </tr>
                  </tbody>
                  <tfoot>
                      <tr>
                          <td colspan="2" class="text-end"><strong>Total Cost:</strong></td>
                          <td><input type="text" class="form-control" id="totalCost" readonly></td>
                          <td></td>
                      </tr>
                  </tfoot>
              </table>
          </div>
  
          <button type="submit" class="btn btn-primary">Submit</button>
        </form>
      </div>
      <div class="container" style="margin-top: 20px;">
        <!-- Year Filter -->
        <div class="form-group">
            <label for="yearFilter">Filter by Year:</label>
            <select id="yearFilter" class="form-control">
                <option value="all" <%= selectedYear === 'all' ? 'selected' : '' %>>All</option>
                <% years.forEach(function(year) { %>
                    <option value="<%= year %>" <%= selectedYear == year ? 'selected' : '' %>><%= year %></option>
                <% }) %>
            </select>
        </div>
    
        <!-- Sales Invoice Table -->
        <h2 style="margin-top: 20px;">Recent Sales Invoices</h2>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Invoice Number</th>
                    <th>Buyer Name</th>
                    <th>Sales Date</th>
                    <th>Total Amount</th>
                </tr>
            </thead>
            <tbody>
                <% invoices.forEach(function(invoice, index) { %>
                    <tr>
                        <td>
                            <a style="cursor: pointer;" class="btn-primary" data-bs-toggle="collapse" href="#collapseSalesInvoice<%= index %>" role="button" aria-expanded="false" aria-controls="collapseSalesInvoice<%= index %>">
                                <%= invoice.invoice_number %>
                            </a>
                        </td>
                        <td><%= invoice.buyer_name %></td>
                        <td><%= new Date(invoice.sales_date).getFullYear() %>-<%= (new Date(invoice.sales_date).getMonth() + 1).toString().padStart(2, '0') %>-<%= new Date(invoice.sales_date).getDate().toString().padStart(2, '0') %></td>
                        <td><%= invoice.totalAmount.toFixed(2) %></td>
                    </tr>
                    <!-- Collapsible content row using a div for smoother collapse -->
                    <tr style="border: transparent !important;">
                        <td colspan="4" style="margin: 0;padding: 0;"> <!-- Adjust colspan based on the number of columns in your table -->
                            <div class="collapse" id="collapseSalesInvoice<%= index %>">
                                <table class="table table-hover table-bordered">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>Product Name</th>
                                            <th>Quantity</th>
                                            <th>Price</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% invoice.products.forEach(function(product) { %>
                                            <tr>
                                                <td><%= product.product_name %></td>
                                                <td><%= product.quantity %></td>
                                                <td><%= product.price %></td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>            
    </div>
    

        <!-- Modal to display images -->
        <div class="modal fade" id="fileModal" tabindex="-1" aria-labelledby="fileModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="fileModalLabel">Uploaded File</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <!-- Image or content will be injected here -->
                    </div>
                </div>
            </div>
        </div>
        <script>
          $(document).ready(function() {
              // Show/hide payment details based on "Paid" checkbox
              $('#paid').change(function() {
                  if ($(this).is(':checked')) {
                      $('#payment-details').show();
                      $('#paidBy, #paidDate').attr('required', true); // Make payment details required
                  } else {
                      $('#payment-details').hide();
                      $('#paidBy, #paidDate').removeAttr('required'); // Remove required attribute
                  }
              });

              // Event listener for view file buttons
              $('.view-file-btn').click(function() {
                  const filePath = $(this).data('file');
                  const fileExtension = filePath.split('.').pop().toLowerCase();

                  // Display image or open file in a new tab/window based on the file type
                  if (['jpg', 'jpeg', 'png', 'gif'].includes(fileExtension)) {
                      // If it's an image, display in a modal
                      $('#fileModal .modal-body').html('<img src="' + filePath + '" class="img-fluid">');
                      $('#fileModal').modal('show');
                  } else {
                      // For other files (like PDFs), open in a new tab
                      window.open(filePath, '_blank');
                  }
              });

              // Add new product row
              $('#addProductRow').click(function() {
                  const newRow = `
                      <tr>
                          <td>
                              <select class="form-control product-select" name="product[]" required>
                                  <option value="">Select Product</option>
                              </select>
                          </td>
                          <td><input type="number" class="form-control quantity-input" name="quantity[]" min="1" required></td>
                          <td><input type="number" class="form-control price-input" name="price[]" min="0.01" step="0.01" required></td>
                          <td><button type="button" class="btn btn-danger remove-product">Remove</button></td>
                      </tr>
                  `;
                  const newRowElement = $(newRow).appendTo('#productTable tbody');
                  populateProductDropdown(newRowElement);
              });

              // Remove product row
              $(document).on('click', '.remove-product', function() {
                  $(this).closest('tr').remove();
                  calculateTotalCost(); // Recalculate total cost after removing a row
              });

              // Calculate total cost function
              function calculateTotalCost() {
                  let totalCost = 0;
                  $('#productTable tbody tr').each(function() {
                      const quantity = $(this).find('.quantity-input').val();
                      const price = $(this).find('.price-input').val();
                      if (quantity && price) {
                          totalCost += (quantity * price);
                      }
                  });
                  $('#totalCost').val(totalCost.toFixed(2)); // Update total cost display
              }

              // Calculate total cost on input change
              $(document).on('input', '.quantity-input, .price-input', function() {
                  calculateTotalCost();
              });

              // Populate product dropdown with available products and set quantity limits
              function populateProductDropdown(row) {
                  fetch('/available-products')
                      .then(response => response.json())
                      .then(data => {
                          const dropdown = row.find('.product-select');
                          dropdown.empty();
                          dropdown.append('<option value="">Select Product</option>');
                          data.forEach(product => {
                              dropdown.append(`<option value="${product.product}" data-max="${product.available_stock}">${product.product}</option>`);
                          });
                      })
                      .catch(error => console.error('Error fetching products:', error));
              }

              // Set the max attribute of quantity input based on selected product's available stock
              $(document).on('change', '.product-select', function() {
                  const selectedOption = $(this).find('option:selected');
                  const availableStock = selectedOption.data('max');
                  const quantityInput = $(this).closest('tr').find('.quantity-input');
                  quantityInput.attr('max', availableStock);
              });

              // Populate product dropdown for the initial row
              populateProductDropdown($('#productTable tbody tr'));
          });
        </script>

        <script>
            $(document).ready(function() {
                // Auto-suggestion for supplier names
                $('#buyerName').on('input', function() {
                    const query = $(this).val();
                    if (query.length > 0) {
                        fetch(`/get-suppliers?q=${query}`)
                            .then(response => response.json())
                            .then(data => {
                                const dropdown = $('#buyer-dropdown');
                                dropdown.empty();
                                if (data.length > 0) {
                                    data.forEach(supplier => {
                                        dropdown.append(`<li><a class="dropdown-item" href="#">${supplier}</a></li>`);
                                    });
                                    dropdown.show();
                                } else {
                                    dropdown.hide();
                                }
                            })
                            .catch(error => console.error('Error fetching suppliers:', error));
                    } else {
                        $('#buyer-dropdown').hide();
                    }
                });

                // Select supplier name from dropdown
                $('#buyer-dropdown').on('click', 'a', function() {
                    $('#buyerName').val($(this).text());
                    $('#buyer-dropdown').hide();
                });

                // Hide the dropdown when clicking outside
                $(document).on('click', function(e) {
                    if (!$(e.target).closest('#buyerName, #buyer-dropdown').length) {
                        $('#buyer-dropdown').hide();
                    }
                });
            });
        </script>
    </main>
  </body>
</html>
